name: Run Downloader

on:
  workflow_dispatch:
    inputs:
      urls:
        description: "Comma-separated URLs to download"
        required: true

permissions:
  contents: read

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Split URLs and Prepare Matrix
        id: set-matrix
        shell: bash
        run: |
          echo "Splitting URLs..."
          urls="${{ github.event.inputs.urls }}"
          IFS=',' read -ra ADDR <<< "$urls"
          echo "Input URLs: ${ADDR[@]}"

          # Initialize an empty array for JSON objects
          matrix_entries=()
          index=0
          for url in "${ADDR[@]}"; do
            trimmed_url=$(echo "$url" | xargs)
            echo "Processing URL $index: $trimmed_url"
            # Create a JSON object with url and id
            json_entry=$(jq -n --arg url "$trimmed_url" --arg id "$index" '{url: $url, id: $id}')
            matrix_entries+=("$json_entry")
            index=$((index + 1))
          done

          # Combine all JSON objects into a JSON array
          matrix_json=$(printf '%s\n' "${matrix_entries[@]}" | jq -c -s '.')
          echo "matrix=$matrix_json" >> "$GITHUB_OUTPUT"
          echo "Matrix JSON: $matrix_json"

  downloader:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - uses: FedericoCarboni/setup-ffmpeg@v3

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install Dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Run Downloader
        run: |
          python main.py "${{ matrix.url }}"

      - name: Upload Output
        uses: actions/upload-artifact@v4
        with:
          name: temp-output-${{ matrix.id }}
          path: output

  consolidate:
    needs: downloader
    runs-on: ubuntu-latest
    steps:
      - name: Download All Outputs
        uses: actions/download-artifact@v4
        with:
          path: outputs

      - name: Consolidate Outputs
        run: |
          mkdir -p consolidated_output
          for dir in outputs/*; do
            cp -r "$dir"/* consolidated_output/
          done

      - name: Upload Consolidated Output
        uses: actions/upload-artifact@v4
        with:
          name: output-${{ github.run_number }}
          path: consolidated_output
