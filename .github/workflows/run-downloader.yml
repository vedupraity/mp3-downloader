name: Run Downloader

on:
  workflow_dispatch:
    inputs:
      urls:
        description: "Comma-separated URLs to download"
        required: true

permissions:
  contents: read

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.split-urls.outputs.matrix }}
      matrix_length: ${{ steps.split-urls.outputs.matrix_length }}
    steps:
      - name: Split URLs
        id: split-urls
        shell: bash
        run: |
          echo "Splitting URLs..."
          urls="${{ github.event.inputs.urls }}"
          urls_array=()
          IFS=',' read -ra ADDR <<< "$urls"
          for idx in "${!ADDR[@]}"; do
            url=$(echo "${ADDR[$idx]}" | xargs)
            urls_array+=("{\"url\": \"$url\", \"index\": $idx}")
          done
          urls_json=$(printf "[%s]" "$(IFS=,; echo "${urls_array[*]}")")
          echo "Matrix: $urls_json"
          echo "matrix=$urls_json" >> $GITHUB_OUTPUT
          # Output the length of the matrix
          matrix_length=${#urls_array[@]}
          echo "matrix_length=$matrix_length" >> $GITHUB_OUTPUT

  downloader:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - uses: FedericoCarboni/setup-ffmpeg@v3

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip

      - name: Install Dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Run Downloader
        run: |
          OUTPUT_DIR="output_${{ matrix.index }}"
          mkdir -p $OUTPUT_DIR
          python main.py "${{ matrix.url }}" --output $OUTPUT_DIR

      - name: Upload Output
        uses: actions/upload-artifact@v4
        with:
          name: output-${{ matrix.index }}
          path: $OUTPUT_DIR

  consolidate:
    needs: downloader
    runs-on: ubuntu-latest
    steps:
      - name: Download All Outputs
        uses: actions/download-artifact@v4
        with:
          path: outputs

      - name: Consolidate Outputs
        run: |
          mkdir -p consolidated_output
          for dir in outputs/output-*; do
            cp -r "$dir"/* consolidated_output/
          done

      - name: Upload Consolidated Output
        uses: actions/upload-artifact@v4
        with:
          name: output-${{ github.run_number }}
          path: consolidated_output
